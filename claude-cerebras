#!/bin/bash
# Claude CLI with Cerebras Cloud API Integration
# Usage: ./claude-cerebras [claude options]

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üß† Claude CLI - Cerebras Cloud Mode${NC}"
echo "===================================="

# Configuration
CEREBRAS_API_KEY="${CEREBRAS_API_KEY}"
CEREBRAS_MODEL="${CEREBRAS_MODEL:-qwen-3-coder-480b}"
PROXY_PORT="${PROXY_PORT:-8002}"

# Check if API key is configured
check_api_key() {
    if [ -z "$CEREBRAS_API_KEY" ]; then
        echo -e "${RED}‚ùå CEREBRAS_API_KEY not set${NC}"
        echo -e "${YELLOW}üí° Please set your Cerebras API key:${NC}"
        echo "export CEREBRAS_API_KEY=\"your-api-key-here\""
        echo ""
        echo -e "${BLUE}‚ÑπÔ∏è  Get your API key from: https://inference.cerebras.ai/${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ Cerebras API key configured${NC}"
}

# Test Cerebras API connectivity
test_cerebras_api() {
    echo -e "${BLUE}üîç Testing Cerebras API connectivity...${NC}"
    
    # Test API with a simple request
    local test_response=$(curl -s -w "%{http_code}" -o /tmp/cerebras_test.json \
        -H "Authorization: Bearer $CEREBRAS_API_KEY" \
        -H "Content-Type: application/json" \
        -d '{
            "model": "'$CEREBRAS_MODEL'",
            "messages": [{"role": "user", "content": "Say hello"}],
            "max_tokens": 10
        }' \
        "https://api.cerebras.ai/v1/chat/completions" 2>/dev/null)
    
    local http_code="${test_response: -3}"
    
    if [ "$http_code" == "200" ]; then
        echo -e "${GREEN}‚úÖ Cerebras API responding${NC}"
        echo -e "${GREEN}üì± Model: $CEREBRAS_MODEL${NC}"
        return 0
    elif [ "$http_code" == "401" ]; then
        echo -e "${RED}‚ùå Invalid API key${NC}"
        echo -e "${YELLOW}üí° Please check your CEREBRAS_API_KEY${NC}"
        return 1
    elif [ "$http_code" == "429" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  Rate limited, but API key is valid${NC}"
        echo -e "${GREEN}üì± Model: $CEREBRAS_MODEL${NC}"
        return 0
    else
        echo -e "${RED}‚ùå Cerebras API error (HTTP $http_code)${NC}"
        if [ -f "/tmp/cerebras_test.json" ]; then
            echo "Response: $(cat /tmp/cerebras_test.json)"
        fi
        return 1
    fi
}

# Start local proxy for Claude CLI integration
start_cerebras_proxy() {
    echo -e "${BLUE}üöÄ Starting Cerebras proxy for Claude CLI integration...${NC}"
    
    # Check if proxy is already running
    if curl -s http://localhost:$PROXY_PORT/health >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Cerebras proxy already running${NC}"
        return 0
    fi
    
    # Start proxy in background
    echo -e "${BLUE}‚è≥ Starting proxy server on port $PROXY_PORT...${NC}"
    export CEREBRAS_API_KEY="$CEREBRAS_API_KEY"
    export PORT="$PROXY_PORT"
    
    # Find the script directory
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    python3 "$SCRIPT_DIR/cerebras_proxy_simple.py" > /tmp/cerebras_proxy.log 2>&1 &
    PROXY_PID=$!
    
    # Wait for proxy to start
    for i in {1..15}; do
        sleep 1
        if curl -s http://localhost:$PROXY_PORT/health >/dev/null 2>&1; then
            echo -e "${GREEN}‚úÖ Cerebras proxy started successfully (PID: $PROXY_PID)${NC}"
            return 0
        fi
    done
    
    echo -e "${RED}‚ùå Failed to start Cerebras proxy${NC}"
    echo "Check /tmp/cerebras_proxy.log for details:"
    tail -10 /tmp/cerebras_proxy.log 2>/dev/null || echo "No log file found"
    return 1
}

# Main function
main() {
    # Step 1: Check API key
    check_api_key
    
    # Step 2: Test Cerebras API
    if ! test_cerebras_api; then
        echo -e "${RED}‚ùå Cerebras API not accessible${NC}"
        exit 1
    fi
    
    # Step 3: Start local proxy
    if ! start_cerebras_proxy; then
        echo -e "${RED}‚ùå Failed to start Cerebras proxy${NC}"
        exit 1
    fi
    
    echo ""
    echo -e "${GREEN}üéØ Ready to use Claude with Cerebras!${NC}"
    echo -e "${BLUE}üß† Cerebras API: https://api.cerebras.ai/v1${NC}"
    echo -e "${BLUE}üîó Proxy: http://localhost:$PROXY_PORT${NC}"
    echo -e "${BLUE}üì± Model: $CEREBRAS_MODEL${NC}"
    echo ""
    
    # Set environment and run Claude
    export ANTHROPIC_BASE_URL="http://localhost:$PROXY_PORT"
    export ANTHROPIC_API_KEY="cerebras"
    
    # Pass all arguments to claude
    if [ $# -eq 0 ]; then
        echo -e "${BLUE}ü§ñ Starting Claude in interactive mode...${NC}"
        echo -e "${YELLOW}‚è±Ô∏è  Note: First response may take 5-15 seconds${NC}"
        echo ""
        claude
    else
        echo -e "${BLUE}ü§ñ Running Claude with arguments: $*${NC}"
        echo ""
        claude "$@"
    fi
}

# Help message
if [[ "$1" == "--help" || "$1" == "-h" ]]; then
    echo "Claude CLI with Cerebras Cloud API Integration"
    echo ""
    echo "What it does:"
    echo "  1. ‚úÖ Validates your Cerebras API key"
    echo "  2. üîç Tests connectivity to Cerebras Cloud API"
    echo "  3. üöÄ Starts local proxy to translate Anthropic‚ÜîOpenAI API formats"
    echo "  4. ü§ñ Runs Claude CLI with proper configuration"
    echo ""
    echo "Usage:"
    echo "  ./claude-cerebras                    # Interactive mode"
    echo "  ./claude-cerebras -p \"prompt\"        # Direct prompt"
    echo "  ./claude-cerebras --help             # Show this help"
    echo ""
    echo "Configuration:"
    echo "  CEREBRAS_API_KEY=your-key-here (required)"
    echo "  CEREBRAS_MODEL=${CEREBRAS_MODEL} (default)"
    echo "  PROXY_PORT=${PROXY_PORT} (default)"
    echo ""
    echo "Requirements:"
    echo "  - Cerebras Cloud API key (get from https://inference.cerebras.ai/)"
    echo "  - Python 3 with requests, fastapi, uvicorn installed"
    echo "  - Internet connectivity"
    echo ""
    echo "Features:"
    echo "  - 480B parameter qwen-3-coder model"
    echo "  - Pay-per-token pricing (competitive rates)"
    echo "  - Zero infrastructure setup required"
    echo "  - Automatic rate limiting and retry handling"
    echo ""
    echo "Troubleshooting:"
    echo "  - Ensure CEREBRAS_API_KEY is set correctly"
    echo "  - Check internet connectivity"
    echo "  - Verify API key is valid at https://inference.cerebras.ai/"
    exit 0
fi

# Run main function
main "$@"